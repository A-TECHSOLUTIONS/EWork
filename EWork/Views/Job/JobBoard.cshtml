@model EWork.ViewModels.JobBoardViewModel

@{
    if (ViewData["Title"] is null)
    {
        ViewData["Title"] = "Job Board";
    }

    if (ViewBag.Heading is null)
    {
        ViewBag.Heading = "Job Board";
    }
}

@section Styles {
    <link href="/css/jobboard.css" rel="stylesheet" type="text/css" />
    <link href="/css/space.min.css" rel="stylesheet" type="text/css" />
    <link href="/css/button.css" rel="stylesheet" type="text/css" />
}

@functions {
double GetUserRating(IEnumerable<Review> reviews)
{
    if (reviews is null)
        return 0;

    var reviewsArr = reviews as Review[] ?? reviews.ToArray();
    var res = reviewsArr.Length == 0 ? 0d : reviewsArr.Average(r => r.Value);

    return res;
}
}

<div class="container-fluid">
    <div class="row">
        <h2 class="col-xs-12 col-md-offset-2 col-md-8 page-title">@ViewBag.Heading</h2>
        <form id="searchJobsForm" method="get" class="col-xs-12 col-md-offset-2 col-md-8" action="@Model.FilterModel.RequiredTags" role="search">
            <div class="row">
                <div class="dropdown col-xs-2 col-md-1">
                    <button class="btn job-board-filter dropdown" data-toggle="dropdown" type="button">
                        <span class="glyphicon glyphicon-filter"></span>
                        <span class="caret"></span>
                    </button>
                    <div id="filtersInputs" class="dropdown-menu padding-10" role="menu" aria-labelledby="dropdownMenu1" style="width: 250px;">
                        <h4 class="text-center margin-bottom-0">Employer rating</h4>
                        <label for="employerRatingFrom">From</label>
                        <input class="form-control" type="number" name="employerRatingFrom"
                               placeholder="0"
                               value="@Model.FilterModel.EmployerRatingFrom"
                               id="employerRatingFrom" min="0" step="0.01" max="10" maxlength="5" />
                        <div class="space-5"></div>
                        <label for="employerRatingTo">To</label>
                        <input class="form-control" type="number" name="employerRatingTo"
                               placeholder="10"
                               value="@Model.FilterModel.EmployerRatingTo"
                               id="employerRatingTo" min="0" step="0.01" max="10" maxlength="5" />
                        <div class="space-20"></div>

                        <h4 class="text-center margin-bottom-0">Budget</h4>
                        <label for="budgetFrom">From</label>
                        <input class="form-control" type="number" name="budgetFrom"
                               placeholder="0"
                               value="@Model.FilterModel.BudgetFrom"
                               id="budgetFrom" min="0" step="0.01" maxlength="5" />
                        <div class="space-5"></div>
                        <label for="budgetTo">To</label>
                        @{
                            var budgetToString = Model.FilterModel.BudgetTo.ToString("F");
                            budgetToString = budgetToString.Substring(0, Math.Min(budgetToString.Length, 10));
                        }
                        <input class="form-control" type="number" name="budgetTo"
                               placeholder="@double.MaxValue.ToString("F").Substring(0, 10)"
                               value="@budgetToString"
                               id="budgetTo" min="0" step="0.01" maxlength="5" />
                        <div class="space-10"></div>
                        <div class="justify-content-container">
                            <input id="resetFiltersButton" class="text-center button" type="button" value="Reset filters"/>
                        </div>
                    </div>
                </div>
                <div class="input-group col-xs-9 col-md-11">
                    <input type="text" class="form-control" placeholder="Searching by tags" name="RequiredTags" id="SearchingByTags" value="@Model.FilterModel.RequiredTags">
                    <div class="input-group-btn">
                        <button class="btn btn-default" id="searchingSubmit" type="submit">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </form>
        <div class="col-xs-12 col-md-offset-2 col-md-8" id="jobs-container">
            @foreach (var job in Model.Jobs)
            {
                <div class="job-container">
                    <h4 class="job-title">
                        <a asp-controller="Job" asp-action="JobInfo" asp-route-jobid="@job.Id">@job.Title</a>
                    </h4>
                    <h5 class="posted-date">
                        Posted <span>@job.CreationDate</span>
                    </h5>
                    <div class="space-10"></div>
                    <div class="job-budget">
                        @job.Budget$ <br />
                    </div>
                    <p class="fixed-price">Fixed price</p>
                    <div class="job-description">
                        @foreach (var paragraph in job.Description?.Replace("\r", "").Split("\n") ?? Enumerable.Empty<string>())
                        {
                            <span>@paragraph</span><br />
                        }
                    </div>
                    <div class="space-30"></div>
                    <div class="job-tags">
                        @foreach (var tag in job.JobTags.Select(jt => jt.Tag))
                        {
                            <div class="job-tag" data-searchurl="@Model.SearchUrl">@tag.Text</div>
                        }
                    </div>
                    <div class="space-20"></div>
                    <div class="user-rating">Employer rating: <span>@GetUserRating(job.Employer.Reviews)</span></div>
                    @if (job.HiredFreelancer is null && (Model.CurrentUser?.Id == job.Employer.Id || User.IsInRole("moderator") || User.IsInRole("administrator")))
                    {
                        <form asp-action="DeleteJob">
                            <input type="hidden" name="jobId" value="@job.Id" />
                            <input type="submit" class="close-job" value="&Chi;" />
                        </form>
                    }
                </div>
            }
        </div>
    </div>
</div>
<div id="antiForgeryToken">
    @Html.AntiForgeryToken()
</div>
<input type="hidden" name="searchUrl" value="@Model.SearchUrl" />
<input type="hidden" name="getJobsAjaxMethodUrl" value="@Model.GetJobsAjaxMethodUrl" />
<div class="space-20"></div>
<div class="container-fluid">
    <div class="row">
        <div class="justify-content-container">
            <button class="button blue" id="download-more-jobs">Load more</button>
        </div>
    </div>
</div>

@section Scripts
{
    <script>const takeAmount = @Model.TakeAmount</script>
    <script type="text/javascript" src="/lib/dateFormatter.min.js"></script>
    <script type="text/javascript" src="/js/job/searchingByClickingOnTags.js"></script>
    <script type="text/javascript" src="/js/job/ajaxJobDownload.js"></script>
    <script type="text/javascript" src="/js/job/jobBoard.js"></script>
}

@* Job template *@
@* <div class="job-container">
        <h4 class="job-title">
            <a href="">Test job title</a>
        </h4>
        <h5 class="posted-date">
            Posted <span>08/19/2018 6:04 PM</span>
        </h5>
        <div class="space-10"></div>
        <div class="job-budget">
            125$ <br />
        </div>
        <p class="fixed-price">Fixed price</p>
        <div class="job-description">
            Looking for a flexible, Independant, can-do attitude web developer. Must know: - Preact (react alternative, alias) - Redux - SASS - Zeplin - Webpack 3 You will be working along side me and 2 other remote devs, mainly working with a backend engineer for help with the api.
        </div>
        <div class="space-30"></div>
        <div class="job-tags">
            <div class="job-tag">
                123123
            </div>
            <div class="job-tag">
                45345
            </div>
            <div class="job-tag">
                123112412323
            </div>
        </div>
        <div class="space-20"></div>
        <div class="user-rating">Employer rating: <span>9.5</span></div>
    </div> *@